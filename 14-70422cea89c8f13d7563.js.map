{"version":3,"sources":["webpack:///./src/components/AC-CategoryPage/components/CategoryHeader/BDCategoryHeader.jsx","webpack:///./src/components/AC-CategoryPage/components/CategoryHeader/Styles/BDCategoryHeader.module.css"],"names":["CategoryHeader","location","useLocation","dispatch","useDispatch","useState","categoryNameRender","setCategoryNameRender","prevPathName","usePrevious","pathname","navCats","useSelector","state","menuReducer","navCategory","shallowEqual","categoryNameState","categoryReducer","cat","categoryImageState","catImage","filteredCatImage","split","join","cidN","useEffect","prevPath","fetchCategoryFromDirectUrl","console","info","undefined","nameState","includes","replace","Fragment","title","desc","cid","className","classes","subNavWrapper2","subNavWrapper","style","background","PROJECT_LINK","catInfo","container","justify","alignItems","item","xs","catName","dangerouslySetInnerHTML","__html","catDesc","display","longdesc","margin","encodeConverter","module","exports"],"mappings":"yVAwBe,SAASA,IACtB,IAAMC,EAAWC,wBAEXC,EAAWC,cAHsB,EAIaC,mBAAS,IAAtDC,EAJgC,KAIZC,EAJY,KAMjCC,EAAeC,YAAYR,EAASS,UAEpCC,EAAUC,aACd,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,cAC3BC,KAGIC,EAAoBL,aACxB,SAAAC,GAAK,OAAIA,EAAMK,gBAAgBC,MAC/BH,KAGII,EAAqBR,aACzB,SAAAC,GAAK,OAAIA,EAAMK,gBAAgBG,WAC/BL,KAGIM,EAAmBF,EACrBA,EAAmBG,MAAM,KAAKC,KAAK,OACnCJ,EAEEK,EAAOb,aAAY,SAAAC,GAAK,OAAIA,EAAMK,gBAAgBO,OAAMT,KAwC9D,OApCAU,qBAAU,WACR,IAAIC,EAAWnB,EAQf,OAPAL,EAASyB,eACTC,QAAQC,KACN,aADF,QAEU7B,EAASS,SAFnB,iBAGeiB,EAHf,IAIEA,IAAa1B,EAASS,eAAyBqB,IAAbJ,GAE7B,WACLE,QAAQC,KACN,aADF,QAEU7B,EAASS,SAFnB,iBAGeiB,EAHf,kBAIgBnB,EAJhB,QAOD,CAACP,EAASS,WAEbgB,qBAAU,WACR,GAAIT,EAAmB,CACrBY,QAAQC,KAAK,SAAUb,EAAmBX,GAC1C,IAAI0B,EAAYf,EACZA,EAAkBgB,SAAS,cAC7BD,EAAYf,EAAkBiB,QAAQ,WAAY,MAEhDjB,EAAkBgB,SAAS,cAC7BD,EAAYf,EAAkBiB,QAAQ,WAAY,MAEhDjB,EAAkBgB,SAAS,cAC7BD,EAAYf,EAAkBiB,QAAQ,WAAY,MAEpD3B,EAAsByB,MAEvB,CAACf,IAGF,kBAAC,IAAMkB,SAAP,KACE,kBAAC,IAAD,CACEC,MAAO9B,EACP+B,KAAM/B,EACNgC,IAAKb,IAEP,yBACEc,UACEtC,EAASS,SAASuB,SAAS,WACvBO,IAAQC,eACRD,IAAQE,cAEdC,MAAO,CACLC,WAAY3C,EAASS,SAASuB,SAAS,WACnC,KADQ,OAEDY,IAFC,SAEoBvB,EAFpB,MAKd,yBAAKiB,UAAWC,IAAQM,SACtB,yBAAKP,UAAU,8BACb,kBAAC,IAAD,CAAMQ,WAAS,EAACC,QAAQ,gBAAgBC,WAAW,UACjD,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,IACb,wBACEZ,UAAWC,IAAQY,QACnBC,wBAAyB,CAAEC,OAAQhD,KAEpCL,EAASS,SAASuB,SAAS,WAC1B,yBAAKM,UAAWC,IAAQe,SAAxB,kBACE,MAEN,kBAAC,IAAD,CAAML,MAAI,EAACC,GAAI,IACb,yBACEZ,UAAWC,IAAQe,QACnBZ,MAAO,CACLa,QAA6B,IAApB7C,EAAQ8C,SAAR,gBAGX,yBACEd,MAAO,CACLe,OAAQ,KAEVL,wBAAyB,CACvBC,OAAQK,YAAgBhD,EAAQ8C,sB,qBCrItDG,EAAOC,QAAU,CAAC,cAAgB,gDAAgD,eAAiB,iDAAiD,QAAU,0CAA0C,QAAU,0CAA0C,QAAU","file":"14-70422cea89c8f13d7563.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\r\nimport { useLocation } from \"@reach/router\"\r\nimport Loading from \"../../../AC-Loading/Loading.jsx\"\r\nimport encodeConverter from \"../../../../functions/htmldecoder\"\r\nimport Async from \"react-code-splitting\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\n\r\nimport HelmetSeo from \"../../../../shared/components/AC-Helmet/HelmetSeo\"\r\n\r\nimport {\r\n  fetchCategoryFromDirectUrl,\r\n  backToCategoryNormalize,\r\n} from \"../../../../redux/actions/categoryActions\"\r\n\r\nimport { PROJECT_LINK } from \"../../../../project-config\"\r\nimport { usePrevious } from \"../../../../functions/Utilities.js\"\r\n\r\nimport classes from \"../CategoryHeader/Styles/BDCategoryHeader.module.css\"\r\n\r\n// const CategoryBreadcrumb = () => (\r\n//   <Async load={import(\"../../../AC-Breadcrumb/BDCategoryBreadcrumb.jsx\")} />\r\n// );\r\n\r\nexport default function CategoryHeader() {\r\n  const location = useLocation()\r\n\r\n  const dispatch = useDispatch()\r\n  const [categoryNameRender, setCategoryNameRender] = useState(\"\")\r\n\r\n  const prevPathName = usePrevious(location.pathname)\r\n\r\n  const navCats = useSelector(\r\n    state => state.menuReducer.navCategory,\r\n    shallowEqual\r\n  )\r\n\r\n  const categoryNameState = useSelector(\r\n    state => state.categoryReducer.cat,\r\n    shallowEqual\r\n  )\r\n\r\n  const categoryImageState = useSelector(\r\n    state => state.categoryReducer.catImage,\r\n    shallowEqual\r\n  )\r\n\r\n  const filteredCatImage = categoryImageState\r\n    ? categoryImageState.split(\" \").join(\"%20\")\r\n    : categoryImageState\r\n\r\n  const cidN = useSelector(state => state.categoryReducer.cidN, shallowEqual)\r\n\r\n  /*Checking Category Name with URL Location if not match fetch the data again\r\n  This funtion is for back button helper*/\r\n  useEffect(() => {\r\n    let prevPath = prevPathName\r\n    dispatch(fetchCategoryFromDirectUrl())\r\n    console.info(\r\n      \"langCode -\",\r\n      `url:'${location.pathname}'`,\r\n      `prevPath:'${prevPath}'`,\r\n      prevPath !== location.pathname && prevPath !== undefined\r\n    )\r\n    return () => {\r\n      console.info(\r\n        \"langCode +\",\r\n        `url:'${location.pathname}'`,\r\n        `prevPath:'${prevPath}'`,\r\n        `prevPath2:'${prevPathName}'`\r\n      )\r\n    }\r\n  }, [location.pathname])\r\n\r\n  useEffect(() => {\r\n    if (categoryNameState) {\r\n      console.info(\"MON---\", categoryNameState, categoryNameRender)\r\n      let nameState = categoryNameState\r\n      if (categoryNameState.includes(\"&aacute;\")) {\r\n        nameState = categoryNameState.replace(\"&aacute;\", \"á\")\r\n      }\r\n      if (categoryNameState.includes(\"&eacute;\")) {\r\n        nameState = categoryNameState.replace(\"&eacute;\", \"é\")\r\n      }\r\n      if (categoryNameState.includes(\"&iacute;\")) {\r\n        nameState = categoryNameState.replace(\"&iacute;\", \"í\")\r\n      }\r\n      setCategoryNameRender(nameState)\r\n    }\r\n  }, [categoryNameState])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HelmetSeo\r\n        title={categoryNameRender}\r\n        desc={categoryNameRender}\r\n        cid={cidN}\r\n      />\r\n      <div\r\n        className={\r\n          location.pathname.includes(\"/search\")\r\n            ? classes.subNavWrapper2\r\n            : classes.subNavWrapper\r\n        }\r\n        style={{\r\n          background: location.pathname.includes(\"search/\")\r\n            ? null\r\n            : `url(${PROJECT_LINK}/store${filteredCatImage})`,\r\n        }}\r\n      >\r\n        <div className={classes.catInfo}>\r\n          <div className=\"sub-nav-title-desc-wrapper\">\r\n            <Grid container justify=\"space-between\" alignItems=\"center\">\r\n              <Grid item xs={12}>\r\n                <h1\r\n                  className={classes.catName}\r\n                  dangerouslySetInnerHTML={{ __html: categoryNameRender }}\r\n                ></h1>\r\n                {location.pathname.includes(\"/search\") ? (\r\n                  <div className={classes.catDesc}>Search Results</div>\r\n                ) : null}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div\r\n                  className={classes.catDesc}\r\n                  style={{\r\n                    display: navCats.longdesc != \"\" ? `flex` : `none`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      margin: \"0\",\r\n                    }}\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: encodeConverter(navCats.longdesc),\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n        {/* <CategoryBreadcrumb /> */}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subNavWrapper\":\"BDCategoryHeader-module--subNavWrapper--3LXYJ\",\"subNavWrapper2\":\"BDCategoryHeader-module--subNavWrapper2--2bANe\",\"catInfo\":\"BDCategoryHeader-module--catInfo--2ST0e\",\"catName\":\"BDCategoryHeader-module--catName--1AUPa\",\"catDesc\":\"BDCategoryHeader-module--catDesc--3Aw4e\"};"],"sourceRoot":""}